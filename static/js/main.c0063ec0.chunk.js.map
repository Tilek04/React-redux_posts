{"version":3,"sources":["redux/type.js","redux/actions.js","Likes.js","redux/Title.js","SingleComment.js","Comments.js","Spin.js","redux/appReducer.js","App.js","redux/likesReduser.js","redux/inputReducer.js","redux/commentsReducer.js","redux/rootReducer.js","index.js","redux/middleWare.js"],"names":["INCREMENT","DECREMENT","INPUT_TEXT","COMMENT_CREACTED","COMMENT_UPDATE","COMMENT_DELETE","COMMENTS_LOAD","LOADER_DISPLAY_ON","LOADER_DISPLAY_OFF","ERROR_DISPLAY_ON","ERROR_DISPLAY_OFF","loaderOff","type","errorOn","text","dispatch","setTimeout","connect","state","likes","likesReducer","onIncrementLikes","onDecrementLikes","props","className","onClick","Title","useSelector","inputReducer","useDispatch","onChange","e","inputText","target","value","SingleComment","data","useState","commentText","setCommentText","id","useEffect","onSubmit","preventDefault","commentUpdate","commentDelete","hidden","Comments","textComment","setTextComment","comments","commentsReducer","fetch","response","json","jsonData","uniqid","commentCreate","length","map","res","Spin","spinner","appReducer","loading","console","log","color","height","visible","initialState","error","App","src","alt","rootReducer","combineReducers","action","commentNew","name","itemIndex","findIndex","nextComments","slice","store","createStore","compose","applyMiddleware","thunk","badWords","next","some","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0063ec0.chunk.js","sourcesContent":["export const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\nexport const INPUT_TEXT = 'INPUT_TEXT';\nexport const COMMENT_CREACTED = 'COMMENT_CREACTED';\nexport const COMMENT_UPDATE = 'COMMENT_UPDATE';\nexport const COMMENT_DELETE = 'COMMENT_DELETE';\nexport const COMMENTS_LOAD = 'COMMENTS_LOAD';\nexport const LOADER_DISPLAY_ON = 'LOADER_DISPLAY_ON';\nexport const LOADER_DISPLAY_OFF = 'LOADER_DISPLAY_OFF';\nexport const ERROR_DISPLAY_ON = 'ERROR_DISPLAY_ON';\nexport const ERROR_DISPLAY_OFF = 'ERROR_DISPLAY_OFF';\n","import {\n  INCREMENT,\n  DECREMENT,\n  INPUT_TEXT,\n  COMMENT_CREACTED,\n  COMMENT_UPDATE,\n  COMMENT_DELETE,\n  LOADER_DISPLAY_OFF,\n  LOADER_DISPLAY_ON,\n  COMMENTS_LOAD,\n  ERROR_DISPLAY_ON,\n  ERROR_DISPLAY_OFF,\n} from \"./type\";\n\nexport function incrementLikes() {\n  return {\n    type: INCREMENT,\n  };\n}\n\nexport function decrementLikes() {\n  return {\n    type: DECREMENT,\n  };\n}\nexport function inputText(text) {\n  return {\n    type: INPUT_TEXT,\n    text,\n  };\n}\n\nexport function commentCreate(text, id) {\n  return {\n    type: COMMENT_CREACTED,\n    data: { text, id },\n  };\n}\nexport function commentUpdate(text, id) {\n  return {\n    type: COMMENT_UPDATE,\n    data: { text, id },\n  };\n}\nexport function commentDelete(id) {\n  return {\n    type: COMMENT_DELETE,\n    id,\n  };\n}\n\nexport function loaderOn() {\n  return {\n    type: LOADER_DISPLAY_ON,\n  };\n}\n\nexport function loaderOff() {\n  return {\n    type: LOADER_DISPLAY_OFF,\n  };\n}\n\nexport function errorOn(text) {\n  return (dispatch) => {\n    dispatch({\n      type: ERROR_DISPLAY_ON,\n      text,\n    }, setTimeout(() => {\ndispatch(errorOff())\n    },2000)\n    );\n  };\n}\n\nexport function errorOff() {\n  return {\n    type: ERROR_DISPLAY_OFF,\n  };\n}\n\nexport function commentsLoad() {\n  return async (dispatch) => {\n    try {\n      dispatch(loaderOn());\n      const response = await fetch(\n        \"https://jsonplaceholder.typicode.com/comments\"\n      );\n      const jsonData = await response.json();\n      setTimeout(() => {\n        dispatch({\n          type: COMMENTS_LOAD,\n          data: jsonData,\n        });\n        dispatch(loaderOff());\n      }, 3000);\n    } catch (err) {\n      dispatch(errorOn(\"Ощибка API\"));\n      dispatch(loaderOff());\n    }\n  };\n}\n","import { connect } from \"react-redux\";\nimport { incrementLikes, decrementLikes } from \"./redux/actions\";\n\nfunction Likes(props) {\n  return (\n    <div className=\"button-controls\">\n      <button onClick={props.onIncrementLikes}>♥{props.likes}</button>\n      <button onClick={props.onDecrementLikes}>Dislike</button>\n    </div>\n  );\n}\nfunction mapStateToProps(state) {\n  const { likesReducer } = state;\n  return {\n    likes: likesReducer.likes,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onIncrementLikes: () => dispatch(incrementLikes()),\n\n    onDecrementLikes: () => dispatch(decrementLikes()),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Likes);\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { inputText } from \"./actions\";\n\n\nexport const Title  = (props) => {\nconst text = useSelector(state  => {\n    const {inputReducer} = state ;\n    return inputReducer.text\n})\nconst dispatch = useDispatch()\n\n    const handleChange = (e) => {\n  \n      dispatch(inputText(e.target.value))\n    }\n\n    return (\n        <div className=\"card-title\">\n            <div className=\"card-title-top\">\n                <input type=\"text\" onChange={handleChange}/>\n            </div>\n            <p>{text}</p>\n        </div>\n    )\n}\n  ","import { useState, useEffect } from \"react\";\nimport { commentUpdate } from \"./redux/actions\";\nimport { useDispatch } from \"react-redux\";\nimport { commentDelete } from \"./redux/actions\";\n\nfunction SingleComment({ data }) {\n  const [commentText, setCommentText] = useState(\"\");\n  const { text, id } = data;\n  useEffect(() => {\n    if (text) {\n      setCommentText(text);\n    }\n  }, [text]);\n  const handleInput = (e) => {\n    setCommentText(e.target.value);\n  };\n  const dispatch = useDispatch();\n  const handleUpdate = (e) => {\n    e.preventDefault()\n    dispatch(commentUpdate(commentText, id))\n  }\nconst handleDelete = (e) => {\n    e.preventDefault();\n    dispatch(commentDelete(id))\n \n}\n\n  return (\n    <form onSubmit={handleUpdate} className=\"comments-item\">\n      <div onClick={handleDelete} className=\"comments-item-delete\">&times;</div>\n      <input type=\"text\" value={commentText} onChange={handleInput} />\n      <input type=\"submit\" hidden />\n    </form>\n  );\n}\n\nexport default SingleComment;\n","import { useState, useEffect } from \"react\";\nimport SingleComment from \"./SingleComment\";\nimport uniqid from \"uniqid\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { commentCreate } from \"./redux/actions\";\nimport { commentsLoad } from \"./redux/actions\";\n\nfunction Comments(props) {\n\n  const [textComment, setTextComment] = useState(\"\");\n  const comments = useSelector((state) => {\n   \n    const { commentsReducer } = state;\n    return commentsReducer.comments;\n  });\n\n  const dispatch = useDispatch();\n  const handleInput = (e) => {\n    \n    setTextComment(e.target.value);\n  };\n  const handleSabmit = (e) => {\n    e.preventDefault();\n   \n    const id = uniqid();\n    dispatch(commentCreate(textComment, id));\n  };\n\nuseEffect(() => {\n  dispatch(commentsLoad())\n}, [])\n\n  return (\n    <div className=\"card-comments\">\n      <form onSubmit={handleSabmit} className=\"comments-item-create\">\n        <input type=\"text\" value={textComment} onChange={handleInput} />\n        <input type=\"submit\" hidden />\n      </form>\n      {!!comments.length && comments.map((res) => {\n        return <SingleComment key={res.id} data={res}/>\n      })}\n\n    </div>\n  );\n}\nexport default Comments;\n","import { useSelector } from \"react-redux\";\nimport Loader from \"react-loader-spinner\";\n\nconst Spin = (props) => {\n    const spinner = useSelector(state => state.appReducer.loading\n    );console.log(\"spinner >>>\", spinner);\n  return (\n    <div className=\"loader-style\">\n      <Loader type=\"TailSpin\" color=\"#00BFFF\"  height={100} visible={spinner} />\n    </div>\n  );\n};\n\nexport default Spin","import { LOADER_DISPLAY_OFF, LOADER_DISPLAY_ON, ERROR_DISPLAY_OFF, ERROR_DISPLAY_ON } from \"./type\";\n\nconst initialState = {\n loading: false,\n error: null\n};\n\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case LOADER_DISPLAY_ON:\n      return {\n        ...state,\n       loading: true\n      };\n\n      case LOADER_DISPLAY_OFF:\n        return {\n          ...state,\n          loading: false\n        };\n\n        case ERROR_DISPLAY_ON:\n            return {\n           ...state,\n           error: action.text\n            };\n\n        case ERROR_DISPLAY_OFF:\n            return {\n              ...state,\n              error: null\n            };\n\n    default:\n      return state;\n  }\n};\n","import './App.css';\nimport { useSelector } from 'react-redux';\nimport Likes from './Likes';\nimport { Title } from './redux/Title';\nimport Comments from './Comments';\nimport Spin from './Spin';\nimport { appReducer } from './redux/appReducer';\n\n\nfunction App() {\n  const error = useSelector(state => state.appReducer.error)\n  console.log('errror', error);\n  return (\n    <div className=\"App\">\n      <div className=\"wrap\">\n      <Spin/>\n        <div className=\"card\">\n          {error && (\n            <div className='error-message'>{error}</div>\n          )}\n          <div className=\"card-image\">\n            <img src=\"./sea.jpg\" alt=\"surfing\"/>\n            <Title/>\n            <Likes/>\n          </div>\n       <Comments/>\n    \n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { INCREMENT, DECREMENT } from \"./type\";\n\nconst initialState = {\n  likes: 0,\n};\n\nexport const likesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return {\n        ...state,\n        likes: state.likes + 1,\n      };\n    case DECREMENT:\n      return {\n        ...state,\n        likes: state.likes - 1,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { INPUT_TEXT } from \"./type\";\n\nconst initialState = {\n  text: \"\",\n};\n\nexport const inputReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // cdcndjc\n    case INPUT_TEXT:\n      return {\n        ...state,\n        text: action.text,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { COMMENTS_LOAD, COMMENT_CREACTED, COMMENT_DELETE, COMMENT_UPDATE } from \"./type\";\n\nconst initialState = {\n  comments: [],\n};\n\nexport const commentsReducer = (state = initialState, action) => {\n  console.log(\"comments reducer\", action);\n\n  switch (action.type) {\n    case COMMENT_CREACTED:\n      return {\n        ...state,\n        comments: [...state.comments, action.data],\n      };\n      case COMMENTS_LOAD:\n        const commentNew = action.data.map(res => {\n         return{\n          text: res.name,\n          id: res.id,\n\n         }\n        })\n        return {\n          ...state,\n          comments: commentNew\n        };\n    case COMMENT_UPDATE:\n      const { data } = action;\n      const { comments } = state;\n      const itemIndex = comments.findIndex((res) => res.id === data.id);\n\n      const nextComments = [\n        ...comments.slice(0, itemIndex),\n        data,\n        ...comments.slice(itemIndex + 1),\n      ];\n\n      return {\n        ...state,\n        comments: nextComments,\n      };\n    case COMMENT_DELETE:\n      return (() => {\n        const { id } = action;\n        const { comments } = state;\n        const itemIndex = comments.findIndex((res) => res.id === id);\n\n        const nextComments = [\n          ...comments.slice(0, itemIndex),\n          ...comments.slice(itemIndex + 1),\n        ];\n        return {\n          ...state,\n          comments: nextComments,\n        };\n      })();\n      \n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { likesReducer } from \"./likesReduser\";\nimport { inputReducer } from \"./inputReducer\";\nimport { commentsReducer } from \"./commentsReducer\";\nimport { appReducer } from \"./appReducer\";\nexport const rootReducer = combineReducers({\n    likesReducer,\n    inputReducer ,\n    commentsReducer,\n    appReducer\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport thunk from 'redux-thunk'\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { rootReducer } from \"./redux/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport { spamFilter } from \"./redux/middleWare\";\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(\n    thunk,\n    spamFilter\n  ),\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n","import { COMMENT_CREACTED } from \"./type\";\nimport { errorOn } from \"./actions\";\n\nexport function spamFilter({dispatch}) {\n    const badWords = ['Осел', \"Ищак\"]\n  return function(next) {\n    return function(action) {\n        if(action.type === COMMENT_CREACTED) {\n         const hasWords = badWords.some(res => action.data.text.includes(res));\n         if (hasWords) {\n            return dispatch(errorOn('Норм общайся'))\n         }\n        }\n        return next(action)\n    }\n  }\n \n}"],"sourceRoot":""}